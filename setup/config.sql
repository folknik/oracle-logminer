ALTER SESSION SET CONTAINER = CDB$ROOT;

SHUTDOWN IMMEDIATE;
STARTUP MOUNT;
ALTER DATABASE ARCHIVELOG;
ALTER DATABASE OPEN;

ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;
ALTER DATABASE FORCE LOGGING;
ALTER SYSTEM ARCHIVE LOG CURRENT;

ALTER SYSTEM SET DB_RECOVERY_FILE_DEST_SIZE = 10G;
ALTER SYSTEM SET DB_RECOVERY_FILE_DEST='/opt/oracle/oradata/recovery_area' SCOPE=SPFILE;

ALTER SYSTEM ARCHIVE LOG CURRENT;


CREATE TABLESPACE LOGMINER_TBS
       DATAFILE '/opt/oracle/oradata/XE/logminer_tbs.dbf'
       SIZE 50M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED;


ALTER SESSION SET CONTAINER = XEPDB1;

CREATE TABLESPACE LOGMINER_TBS
  	   DATAFILE '/opt/oracle/oradata/XE/XEPDB1/logminer_tbs01.dbf'
       SIZE 50M REUSE AUTOEXTEND ON NEXT 50M MAXSIZE UNLIMITED;



ALTER SESSION SET CONTAINER = CDB$ROOT;

CREATE USER c##dbzuser IDENTIFIED BY dbz
       DEFAULT TABLESPACE LOGMINER_TBS
       QUOTA UNLIMITED ON LOGMINER_TBS
       CONTAINER = ALL;

GRANT CREATE SESSION         TO c##dbzuser CONTAINER=ALL;
GRANT SET CONTAINER          TO c##dbzuser CONTAINER=ALL;
GRANT SELECT ON V_$DATABASE  TO c##dbzuser CONTAINER=ALL;
GRANT FLASHBACK ANY TABLE    TO c##dbzuser CONTAINER=ALL;
GRANT SELECT ANY TABLE       TO c##dbzuser CONTAINER=ALL;
GRANT SELECT_CATALOG_ROLE    TO c##dbzuser CONTAINER=ALL;
GRANT EXECUTE_CATALOG_ROLE   TO c##dbzuser CONTAINER=ALL;
GRANT SELECT ANY TRANSACTION TO c##dbzuser CONTAINER=ALL;
GRANT LOGMINING              TO c##dbzuser CONTAINER=ALL;


GRANT CREATE TABLE 			 TO c##dbzuser CONTAINER=ALL;
GRANT LOCK ANY TABLE 		 TO c##dbzuser CONTAINER=ALL;
GRANT CREATE SEQUENCE 		 TO c##dbzuser CONTAINER=ALL;


BEGIN
  DBMS_LOGMNR_D.BUILD(
        OPTIONS => DBMS_LOGMNR_D.STORE_IN_REDO_LOGS);
END;
/


ALTER SYSTEM ARCHIVE LOG CURRENT;




ALTER SESSION SET CONTAINER = XEPDB1;


CREATE USER TESTUSER IDENTIFIED BY TESTUSER123
    DEFAULT TABLESPACE LOGMINER_TBS
    QUOTA UNLIMITED ON LOGMINER_TBS;

GRANT CREATE SESSION TO TESTUSER;
GRANT CREATE TABLE TO TESTUSER;
GRANT CREATE SEQUENCE TO TESTUSER;
GRANT CREATE TRIGGER TO TESTUSER;
GRANT CREATE PROCEDURE TO TESTUSER;
GRANT CREATE VIEW TO TESTUSER;


CREATE TABLE "TESTUSER"."USERS" (
	id      		INT generated as identity NOT NULL,
	first_name      VARCHAR2(64) NOT NULL,
	last_name     	VARCHAR2(64) NOT NULL,
	age 			INT NOT NULL,
	city     		VARCHAR2(64) NOT NULL,
	address     	VARCHAR2(256) NOT NULL,
	phone_number    VARCHAR2(64) NOT NULL,
	created_at    	TIMESTAMP(3) NOT NULL,
	updated_at    	TIMESTAMP(3) NOT NULL,
	constraint users_pk PRIMARY KEY(id)
 );


CREATE TABLE "TESTUSER"."OPERATION" (
    "ID" NUMBER(19,0) NOT NULL ENABLE,
    "END_TIME" NUMBER(19,0),
    "OPERATION_CODE" VARCHAR2(255 CHAR),
    "OPERATION_ID" VARCHAR2(255 CHAR),
    "OPERATION_STATUS" VARCHAR2(255 CHAR),
    "OPERATION_TYPE" VARCHAR2(255 CHAR),
    "RECEIVER" VARCHAR2(255 CHAR),
    "RECEIVER_AMOUNT" NUMBER(19,0),
    "RECEIVER_CURRENCY" VARCHAR2(255 CHAR),
    "RECEIVER_FEE_AMOUNT" NUMBER(19,0),
    "RECEIVER_FEE_CURRENCY" VARCHAR2(255 CHAR),
    "RECIPIENT_ID" NUMBER(19,0),
    "SENDER" VARCHAR2(255 CHAR),
    "SENDER_AMOUNT" NUMBER(19,0),
    "SENDER_CURRENCY" VARCHAR2(255 CHAR),
    "SENDER_EXP" VARCHAR2(255 CHAR),
    "SENDER_FEE_AMOUNT" NUMBER(19,0),
    "SENDER_FEE_CURRENCY" VARCHAR2(255 CHAR),
    "START_TIME" NUMBER(19,0),
    "USER_ID" NUMBER(19,0),
    "ABS_STATUS" VARCHAR2(255 CHAR),
    "VERIFICATION_CODE" VARCHAR2(255 CHAR),
    "EPOS_TYPE" VARCHAR2(255 CHAR),
    "RECEIVER_FULL_NAME" VARCHAR2(255 CHAR),
    "SENDER_FULL_NAME" VARCHAR2(255 CHAR),
    "SENDER_ID" NUMBER(19,0),
    "RECEIVER_ID" NUMBER(19,0),
    "PARENT_ID" VARCHAR2(255 CHAR),
    "COMM_ID" NUMBER(19,0),
    "COMM_TYPE" NUMBER(10,0),
    "COMM_ACCOUNT" VARCHAR2(255 CHAR),
    "DETAILS" VARCHAR2(4000),
    "APP_VERSION" VARCHAR2(255 CHAR),
    "OP_COMMENT" VARCHAR2(255 CHAR),
    "IDENTITY" VARCHAR2(255 CHAR),
    "VERSION" NUMBER(19,0),
    "RECEIVER_TOKEN" VARCHAR2(255 CHAR),
    "SENDER_TOKEN" VARCHAR2(255 CHAR),
    "COMMACCOUNT" VARCHAR2(255 CHAR),
    "COMMID" NUMBER(19,0),
    "COMMTYPE" NUMBER(10,0),
    "MFO" VARCHAR2(255 CHAR),
    "INSTANCE" VARCHAR2(255 CHAR),
    "SERVICE" NUMBER(1,0),
    "SERVICE_NAME" VARCHAR2(255 CHAR),
    "RECEIVER_MFO" VARCHAR2(255 CHAR),
    "QR_CODE_URL" VARCHAR2(255 CHAR),
    "IS_REFUND" NUMBER(1,0),
    "SENDER_ACCOUNT" VARCHAR2(255 CHAR),
    "ACCOUNT_TYPE" VARCHAR2(255 CHAR),
    "AMOUNT" NUMBER(19,0),
    "BUSINESS_ID" NUMBER(19,0),
    "CARD_EXPIRE" VARCHAR2(255 CHAR),
    "CARD_NUMBER" VARCHAR2(255 CHAR),
    "CASH_ID" NUMBER(19,0),
    "COMMISSION" FLOAT(126),
    "CREATE_TIME" NUMBER(19,0),
    "CURRENCY" NUMBER(10,0),
    "DESCRIPTION" VARCHAR2(255 CHAR),
    "DETAIL" VARCHAR2(255 CHAR),
    "ERROR" VARCHAR2(255 CHAR),
    "ERROR_CODE" NUMBER(10,0),
    "IS_UPPER_COMMISSION" NUMBER(1,0),
    "MERCHANT_ID" VARCHAR2(255 CHAR),
    "OPERATION_STATE" VARCHAR2(255 CHAR),
    "PAY_TIME" NUMBER(19,0),
    "PAYMENT_ID" VARCHAR2(255 CHAR),
    "RECEIVER_ACCOUNT" VARCHAR2(255),
    "DEVICE_ID" VARCHAR2(255),
    CONSTRAINT users_pk PRIMARY KEY("ID")
 );


CREATE TABLE "TESTUSER"."CURRENCY_RATE" (
    "ID" NUMBER(19,0) NOT NULL ENABLE,
    "BUY_RATE" FLOAT(126),
    "DATE_TIME" NUMBER(19,0) NOT NULL ENABLE,
    "ISO_CODE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
    "REVAL_RATE" FLOAT(126),
    "SELL_RATE" FLOAT(126),
    CONSTRAINT users_pk PRIMARY KEY("ID")
);

ALTER TABLE "TESTUSER"."OPERATION" ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;
ALTER TABLE "TESTUSER"."CURRENCY_RATE" ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


ALTER SESSION SET CONTAINER = CDB$ROOT;
ALTER SYSTEM ARCHIVE LOG CURRENT;

EXIT;
